"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/assess/route";
exports.ids = ["app/api/assess/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "puppeteer":
/*!****************************!*\
  !*** external "puppeteer" ***!
  \****************************/
/***/ ((module) => {

module.exports = import("puppeteer");;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassess%2Froute&page=%2Fapi%2Fassess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassess%2Froute.ts&appDir=%2FUsers%2Fjeberulz%2FDownloads%2FAccessiScan%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjeberulz%2FDownloads%2FAccessiScan&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassess%2Froute&page=%2Fapi%2Fassess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassess%2Froute.ts&appDir=%2FUsers%2Fjeberulz%2FDownloads%2FAccessiScan%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjeberulz%2FDownloads%2FAccessiScan&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_jeberulz_Downloads_AccessiScan_src_app_api_assess_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/assess/route.ts */ \"(rsc)/./src/app/api/assess/route.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_Users_jeberulz_Downloads_AccessiScan_src_app_api_assess_route_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_Users_jeberulz_Downloads_AccessiScan_src_app_api_assess_route_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/assess/route\",\n        pathname: \"/api/assess\",\n        filename: \"route\",\n        bundlePath: \"app/api/assess/route\"\n    },\n    resolvedPagePath: \"/Users/jeberulz/Downloads/AccessiScan/src/app/api/assess/route.ts\",\n    nextConfigOutput,\n    userland: _Users_jeberulz_Downloads_AccessiScan_src_app_api_assess_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/assess/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhc3Nlc3MlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFzc2VzcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFzc2VzcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmplYmVydWx6JTJGRG93bmxvYWRzJTJGQWNjZXNzaVNjYW4lMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGamViZXJ1bHolMkZEb3dubG9hZHMlMkZBY2Nlc3NpU2NhbiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDaUI7QUFDOUY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgscUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hY2Nlc3Npc2Nhbi8/YTViZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvamViZXJ1bHovRG93bmxvYWRzL0FjY2Vzc2lTY2FuL3NyYy9hcHAvYXBpL2Fzc2Vzcy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYXNzZXNzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYXNzZXNzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hc3Nlc3Mvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvamViZXJ1bHovRG93bmxvYWRzL0FjY2Vzc2lTY2FuL3NyYy9hcHAvYXBpL2Fzc2Vzcy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvYXNzZXNzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassess%2Froute&page=%2Fapi%2Fassess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassess%2Froute.ts&appDir=%2FUsers%2Fjeberulz%2FDownloads%2FAccessiScan%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjeberulz%2FDownloads%2FAccessiScan&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/assess/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/assess/route.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/v3/types.js\");\n/* harmony import */ var _shared_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/shared/types */ \"(rsc)/./src/shared/types.ts\");\n/* harmony import */ var _lib_prompt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/prompt */ \"(rsc)/./src/lib/prompt.ts\");\n/* harmony import */ var _lib_supabase_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/supabase-server */ \"(rsc)/./src/lib/supabase-server.ts\");\n/* harmony import */ var _lib_crawler__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/crawler */ \"(rsc)/./src/lib/crawler.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_lib_crawler__WEBPACK_IMPORTED_MODULE_4__]);\n_lib_crawler__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\nconst runtime = \"nodejs\";\nconst RequestSchema = _shared_types__WEBPACK_IMPORTED_MODULE_1__.AssessmentRequestSchema;\n// Helper to extract first balanced JSON block before HUMAN_SUMMARY\nconst extractFirstJsonObject = (s)=>{\n    const summaryIdx = s.indexOf(\"--- HUMAN_SUMMARY ---\");\n    const text = summaryIdx >= 0 ? s.slice(0, summaryIdx) : s;\n    const start = text.indexOf(\"{\");\n    if (start < 0) return null;\n    let depth = 0;\n    let inString = false;\n    let escape = false;\n    for(let i = start; i < text.length; i++){\n        const ch = text[i];\n        if (inString) {\n            if (escape) {\n                escape = false;\n                continue;\n            }\n            if (ch === \"\\\\\") {\n                escape = true;\n                continue;\n            }\n            if (ch === '\"') inString = false;\n            continue;\n        }\n        if (ch === '\"') {\n            inString = true;\n            continue;\n        }\n        if (ch === \"{\") depth++;\n        else if (ch === \"}\") {\n            depth--;\n            if (depth === 0) return text.slice(start, i + 1);\n        }\n    }\n    return null;\n};\n// Zod schema for the optimized MACHINE_OUTPUT\nconst AiOptimizedSchema = zod__WEBPACK_IMPORTED_MODULE_5__.object({\n    audit_id: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n    target_summary: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        type: zod__WEBPACK_IMPORTED_MODULE_5__[\"enum\"]([\n            \"web\",\n            \"ios\",\n            \"android\",\n            \"hybrid\"\n        ]).optional(),\n        pages_or_components: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n        assumptions: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional()\n    }).optional(),\n    overall: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        grade: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n        score_0_to_100: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        confidence_0_to_1: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n        pour_scores: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n            perceivable: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n            operable: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n            understandable: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n            robust: zod__WEBPACK_IMPORTED_MODULE_5__.number()\n        })\n    }),\n    top_findings: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        id: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n        title: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n        wcag_refs: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n        pour: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        severity_1_to_5: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        reach_1_to_5: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        frequency_1_to_5: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        impact_score: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        effort_1_to_5: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        priority_score: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        confidence_0_to_1: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n        affected_user_groups: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n        business_impact: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        evidence: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n            selectors: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n            snippets: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n            colors: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.object({\n                fg: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n                bg: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n                contrast: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional()\n            })).optional(),\n            locations: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n            instance_count: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n            specific_files: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional()\n        }).optional(),\n        recommended_fix: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n        developer_notes: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        test_steps: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional()\n    })),\n    summary_stats: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        issue_count: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        high_priority_count: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n        est_time_to_relief: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        estimated_users_impacted_percent: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional()\n    }),\n    quick_wins: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        id: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n        why_now: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        eta: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional()\n    })).optional(),\n    visualization_spec: zod__WEBPACK_IMPORTED_MODULE_5__.any().optional(),\n    cta: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        next_steps: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n        lead_capture_copy: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        lead_capture_fields: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional()\n    }).optional(),\n    disclaimers: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional()\n});\n// Existing lightweight schemas for previous JSON format\nconst AiIssueSchema = zod__WEBPACK_IMPORTED_MODULE_5__.object({\n    id: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    category: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n    title: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n    description: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n    userImpact: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n    impact: zod__WEBPACK_IMPORTED_MODULE_5__[\"enum\"]([\n        \"critical\",\n        \"high\",\n        \"medium\",\n        \"low\"\n    ]).optional().default(\"medium\"),\n    wcagRefs: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n    wcagLevel: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional().default(\"WCAG 2.2 AA\"),\n    instances: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    selectors: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n    evidence: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        snippets: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional()\n    }).optional(),\n    codeExample: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        bad: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        good: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional()\n    }).optional(),\n    remediationSteps: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n    timeEstimate: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n    severity: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    reach: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    frequency: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    impactScore: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    effort: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    priorityScore: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    confidence: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n    quickFix: zod__WEBPACK_IMPORTED_MODULE_5__.boolean().optional(),\n    previewHighlights: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        x: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        y: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        w: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        h: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        note: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional()\n    })).optional()\n});\nconst AiResponseSchema = zod__WEBPACK_IMPORTED_MODULE_5__.object({\n    overall: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        grade: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n        score: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n        pourScores: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n            perceivable: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n            operable: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n            understandable: zod__WEBPACK_IMPORTED_MODULE_5__.number(),\n            robust: zod__WEBPACK_IMPORTED_MODULE_5__.number()\n        }),\n        confidence: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n        potentialScore: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional()\n    }),\n    issueCategories: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        name: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n        impact: zod__WEBPACK_IMPORTED_MODULE_5__[\"enum\"]([\n            \"critical\",\n            \"high\",\n            \"medium\",\n            \"low\"\n        ]).optional(),\n        count: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n        indices: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.number()).optional()\n    })).optional(),\n    issues: zod__WEBPACK_IMPORTED_MODULE_5__.array(AiIssueSchema),\n    recommendations: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional(),\n    quickWins: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        title: zod__WEBPACK_IMPORTED_MODULE_5__.string(),\n        impact: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        effort: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        eta: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional(),\n        steps: zod__WEBPACK_IMPORTED_MODULE_5__.array(zod__WEBPACK_IMPORTED_MODULE_5__.string()).optional()\n    })).optional(),\n    businessImpact: zod__WEBPACK_IMPORTED_MODULE_5__.object({\n        usersAffectedPercent: zod__WEBPACK_IMPORTED_MODULE_5__.number().optional(),\n        legalRiskNote: zod__WEBPACK_IMPORTED_MODULE_5__.string().optional()\n    }).optional()\n});\nasync function POST(req) {\n    try {\n        // Validate content type\n        const contentType = req.headers.get(\"content-type\");\n        if (!contentType?.includes(\"application/json\")) {\n            return new Response(JSON.stringify({\n                success: false,\n                message: \"Content-Type must be application/json\"\n            }), {\n                status: 400,\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n        }\n        // Parse and validate request body\n        let json;\n        try {\n            json = await req.json();\n        } catch  {\n            return new Response(JSON.stringify({\n                success: false,\n                message: \"Invalid JSON in request body\"\n            }), {\n                status: 400,\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n        }\n        // Validate against schema\n        let parsed;\n        try {\n            parsed = RequestSchema.parse(json);\n        } catch (error) {\n            return new Response(JSON.stringify({\n                success: false,\n                message: \"Invalid request data\",\n                errors: error.errors\n            }), {\n                status: 400,\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n        }\n        const { websiteUrl, imageFile, assessmentType, email, companyName } = parsed;\n        if (!process.env.OPENAI_API_KEY) {\n            return new Response(JSON.stringify({\n                success: false,\n                message: \"OpenAI API key not configured\"\n            }), {\n                status: 500,\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n        }\n        const openai = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            apiKey: process.env.OPENAI_API_KEY\n        });\n        let completion;\n        let analysisTarget = \"\";\n        let screenshotUrl = undefined;\n        try {\n            if (assessmentType === \"image\") {\n                analysisTarget = \"uploaded screenshot\";\n                completion = await openai.chat.completions.create({\n                    model: \"gpt-4o\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: (0,_lib_prompt__WEBPACK_IMPORTED_MODULE_2__.getSystemPrompt)(\"image\")\n                        },\n                        {\n                            role: \"user\",\n                            content: [\n                                {\n                                    type: \"text\",\n                                    text: `Return MACHINE_OUTPUT JSON followed by a line '--- HUMAN_SUMMARY ---' then the human summary. Analyze this screenshot.`\n                                },\n                                {\n                                    type: \"image_url\",\n                                    image_url: {\n                                        url: imageFile\n                                    }\n                                }\n                            ]\n                        }\n                    ],\n                    max_tokens: 3000,\n                    temperature: 0.2\n                });\n            } else {\n                analysisTarget = websiteUrl;\n                try {\n                    screenshotUrl = await (0,_lib_prompt__WEBPACK_IMPORTED_MODULE_2__.captureWebsiteScreenshot)(websiteUrl);\n                } catch (screenshotError) {\n                    console.warn(\"Screenshot capture failed:\", screenshotError);\n                }\n                // Extract comprehensive data from the website\n                let enrichedData = null;\n                try {\n                    enrichedData = await (0,_lib_crawler__WEBPACK_IMPORTED_MODULE_4__.crawlPage)(websiteUrl);\n                    console.log(`Extracted ${enrichedData.images.length} images, ${enrichedData.forms.forms.length} forms, ${enrichedData.headings.length} headings`);\n                } catch (crawlError) {\n                    console.warn(\"Enhanced crawling failed, falling back to basic analysis:\", crawlError);\n                }\n                // Create detailed analysis prompt with structured data\n                const analysisPrompt = enrichedData ? `Return MACHINE_OUTPUT JSON followed by a line '--- HUMAN_SUMMARY ---' then the human summary.\n\nCOMPREHENSIVE ACCESSIBILITY ANALYSIS for: ${websiteUrl}\n\nSTRUCTURED DATA PROVIDED:\n=========================\n\nPAGE METADATA:\n- Title: ${enrichedData.pageMetadata.title}\n- Language: ${enrichedData.pageMetadata.lang || \"not specified\"}\n- Viewport: ${enrichedData.pageMetadata.viewport || \"not specified\"}\n\nIMAGES ANALYSIS (${enrichedData.images.length} total):\n${enrichedData.images.map((img, i)=>`${i + 1}. ${img.src} - Alt: ${img.alt || \"MISSING\"} - Selector: ${img.selector} - Decorative: ${img.isDecorative}`).join(\"\\n\")}\n\nFORMS ANALYSIS:\n- Total Forms: ${enrichedData.forms.forms.length}\n- Unlabeled Inputs: ${enrichedData.forms.unlabeledInputs.length}\n- Missing Fieldsets: ${enrichedData.forms.missingFieldsets.length}\n- Missing Required Indicators: ${enrichedData.forms.missingRequired.length}\n\nHEADINGS STRUCTURE (${enrichedData.headings.length} total):\n${enrichedData.headings.map((h, i)=>`${i + 1}. H${h.level}: \"${h.text}\" - Selector: ${h.selector} - Empty: ${h.isEmpty}`).join(\"\\n\")}\n\nLINKS ANALYSIS (${enrichedData.links.length} total):\n${enrichedData.links.map((link, i)=>`${i + 1}. \"${link.text}\" -> ${link.href} - Generic: ${link.hasGenericText} - Empty: ${link.isEmptyLink}`).join(\"\\n\")}\n\nCOLOR CONTRAST ANALYSIS (${enrichedData.colors.length} combinations):\n${enrichedData.colors.map((color, i)=>`${i + 1}. ${color.foreground} on ${color.background} - Contrast: ${color.contrast} - AA: ${color.meetsAA} - Context: ${color.context}`).join(\"\\n\")}\n\nINTERACTIVE ELEMENTS (${enrichedData.interactiveElements.length} total):\n${enrichedData.interactiveElements.map((el, i)=>`${i + 1}. ${el.tagName} - Touch Target: ${el.touchTargetSize.width}x${el.touchTargetSize.height} - Meets Size: ${el.meetsTouchTargetSize} - Focusable: ${el.isFocusable}`).join(\"\\n\")}\n\nLANDMARKS (${enrichedData.landmarks.length} total):\n${enrichedData.landmarks.map((landmark, i)=>`${i + 1}. ${landmark.landmarkType} - Has Label: ${landmark.hasLabel} - Selector: ${landmark.selector}`).join(\"\\n\")}\n\nDOCUMENT STRUCTURE:\n- Has H1: ${enrichedData.documentStructure.hasH1}\n- H1 Count: ${enrichedData.documentStructure.h1Count}\n- Skip Links: ${enrichedData.documentStructure.skipLinkCount}\n- Landmark Count: ${enrichedData.documentStructure.landmarkCount}\n\nFIND MINIMUM 15-20 SPECIFIC ISSUES with exact evidence from this data.` : `Return MACHINE_OUTPUT JSON followed by a line '--- HUMAN_SUMMARY ---' then the human summary. Analyze: ${websiteUrl}`;\n                completion = await openai.chat.completions.create({\n                    model: \"gpt-4o\",\n                    messages: [\n                        {\n                            role: \"system\",\n                            content: (0,_lib_prompt__WEBPACK_IMPORTED_MODULE_2__.getSystemPrompt)(\"url\")\n                        },\n                        {\n                            role: \"user\",\n                            content: analysisPrompt\n                        }\n                    ],\n                    max_tokens: 5000,\n                    temperature: 0.2\n                });\n            }\n        } catch (aiError) {\n            console.error(\"OpenAI API error:\", aiError);\n            const errorMessage = aiError?.error?.message || aiError?.message || \"Failed to analyze content\";\n            return new Response(JSON.stringify({\n                success: false,\n                message: `AI analysis failed: ${errorMessage}`\n            }), {\n                status: 500,\n                headers: {\n                    \"content-type\": \"application/json\"\n                }\n            });\n        }\n        const raw = completion.choices[0].message.content || \"\";\n        // Try optimized JSON first (dual-output)\n        let optimizedParsed = null;\n        let humanSummary = undefined;\n        const jsonBlock = extractFirstJsonObject(raw);\n        if (jsonBlock) {\n            try {\n                const obj = JSON.parse(jsonBlock);\n                optimizedParsed = AiOptimizedSchema.parse(obj);\n                const delim = \"--- HUMAN_SUMMARY ---\";\n                const idx = raw.indexOf(delim);\n                if (idx >= 0) humanSummary = raw.slice(idx + delim.length).trim();\n            } catch (_) {\n                optimizedParsed = null;\n            }\n        }\n        // Defaults\n        let overallScore = 70;\n        let gradeRating = \"B-\";\n        let pourScores = {\n            perceivable: 70,\n            operable: 70,\n            understandable: 70,\n            robust: 70\n        };\n        let quickWins = [];\n        let issues = [];\n        let potentialScore = undefined;\n        let recommendations = [];\n        let businessImpact = undefined;\n        if (optimizedParsed) {\n            overallScore = Math.max(0, Math.min(100, Math.round(optimizedParsed.overall.score_0_to_100)));\n            gradeRating = optimizedParsed.overall.grade;\n            pourScores = optimizedParsed.overall.pour_scores;\n            issues = optimizedParsed.top_findings.map((f, idx)=>({\n                    type: f.title,\n                    description: f.business_impact || \"See evidence and recommended fixes\",\n                    impact: f.severity_1_to_5 >= 5 || f.priority_score >= 20 ? \"critical\" : f.severity_1_to_5 >= 4 ? \"high\" : f.severity_1_to_5 >= 3 ? \"medium\" : \"low\",\n                    wcagLevel: f.wcag_refs && f.wcag_refs.length ? `WCAG ${f.wcag_refs.join(\", \")}` : \"WCAG 2.2 AA\",\n                    element: f.evidence?.selectors?.[0],\n                    recommendation: (f.recommended_fix || []).join(\"; \") || f.developer_notes || \"Follow WCAG 2.2 standards to remediate.\",\n                    id: idx,\n                    category: f.pour,\n                    title: f.title,\n                    userImpact: f.business_impact,\n                    wcagRefs: f.wcag_refs,\n                    selectors: f.evidence?.selectors,\n                    evidence: {\n                        snippets: f.evidence?.snippets\n                    },\n                    remediationSteps: f.recommended_fix,\n                    severity: f.severity_1_to_5,\n                    reach: f.reach_1_to_5,\n                    frequency: f.frequency_1_to_5,\n                    impactScore: f.impact_score,\n                    effort: f.effort_1_to_5,\n                    priorityScore: f.priority_score,\n                    confidence: f.confidence_0_to_1\n                }));\n            recommendations = optimizedParsed.cta?.next_steps || [];\n            quickWins = (optimizedParsed.quick_wins || []).map((q)=>({\n                    title: q.id,\n                    impact: q.why_now || \"High impact / low effort\",\n                    effort: \"Varies\",\n                    eta: q.eta || \"1-3 days\"\n                }));\n            if (optimizedParsed.summary_stats.estimated_users_impacted_percent !== undefined) {\n                businessImpact = {\n                    usersAffectedPercent: optimizedParsed.summary_stats.estimated_users_impacted_percent,\n                    legalRiskNote: optimizedParsed.disclaimers?.[0]\n                };\n            }\n        } else {\n            // Legacy JSON prompt path\n            let aiJsonParsed = null;\n            try {\n                aiJsonParsed = AiResponseSchema.parse(JSON.parse(raw.replace(/^```(?:json)?/i, \"\").replace(/```\\s*$/i, \"\").trim()));\n            } catch  {\n                aiJsonParsed = null;\n            }\n            if (aiJsonParsed) {\n                overallScore = Math.max(0, Math.min(100, Math.round(aiJsonParsed.overall.score)));\n                gradeRating = aiJsonParsed.overall.grade;\n                pourScores = aiJsonParsed.overall.pourScores;\n                potentialScore = aiJsonParsed.overall.potentialScore;\n                issues = aiJsonParsed.issues.map((i, idx)=>({\n                        type: i.title || i.category || \"Accessibility Issue\",\n                        description: i.description,\n                        impact: i.impact || \"medium\",\n                        wcagLevel: i.wcagLevel || \"WCAG 2.2 AA\",\n                        element: i.selectors?.[0] || i.category || undefined,\n                        recommendation: i.remediationSteps?.join(\"; \") || \"Follow WCAG 2.2 standards to remediate.\",\n                        id: i.id ?? idx,\n                        category: i.category,\n                        title: i.title,\n                        userImpact: i.userImpact,\n                        wcagRefs: i.wcagRefs,\n                        instances: i.instances,\n                        selectors: i.selectors,\n                        evidence: i.evidence,\n                        codeExample: i.codeExample,\n                        remediationSteps: i.remediationSteps,\n                        timeEstimate: i.timeEstimate,\n                        severity: i.severity,\n                        reach: i.reach,\n                        frequency: i.frequency,\n                        impactScore: i.impactScore,\n                        effort: i.effort,\n                        priorityScore: i.priorityScore,\n                        confidence: i.confidence,\n                        quickFix: i.quickFix,\n                        previewHighlights: i.previewHighlights\n                    }));\n                recommendations = aiJsonParsed.recommendations || [];\n                quickWins = aiJsonParsed.quickWins || [];\n                if (aiJsonParsed.businessImpact) businessImpact = aiJsonParsed.businessImpact;\n            } else {\n                // Fallback to regex path from previous implementation\n                const aiResponse = raw;\n                const scoreMatches = [\n                    aiResponse.match(/overall.*?score.*?(\\d+)/i),\n                    aiResponse.match(/total.*?score.*?(\\d+)/i),\n                    aiResponse.match(/accessibility.*?score.*?(\\d+)/i),\n                    aiResponse.match(/score.*?(\\d+).*?(?:out of|\\/)\\s*100/i)\n                ];\n                for (const match of scoreMatches){\n                    if (match) {\n                        overallScore = Math.min(100, Math.max(0, parseInt(match[1])));\n                        break;\n                    }\n                }\n                const gradeMatch = aiResponse.match(/grade.*?([A-F][+-]?)/i);\n                if (gradeMatch) gradeRating = gradeMatch[1];\n                const pourMatches = {\n                    perceivable: aiResponse.match(/perceivable.*?(\\d+)/i),\n                    operable: aiResponse.match(/operable.*?(\\d+)/i),\n                    understandable: aiResponse.match(/understandable.*?(\\d+)/i),\n                    robust: aiResponse.match(/robust.*?(\\d+)/i)\n                };\n                Object.entries(pourMatches).forEach(([key, m])=>{\n                    if (m) {\n                        pourScores[key] = Math.min(100, Math.max(0, parseInt(m[1])));\n                    }\n                });\n                const fallbackIssues = [\n                    {\n                        type: \"General Accessibility Review\",\n                        description: \"The website may benefit from a comprehensive accessibility review\",\n                        impact: \"medium\",\n                        wcagLevel: \"WCAG 2.2 AA\",\n                        element: \"Website elements\",\n                        recommendation: \"Conduct thorough accessibility testing including automated tools and manual review\"\n                    }\n                ];\n                issues = fallbackIssues;\n                recommendations = [\n                    \"Prioritize critical and high-impact issues for immediate remediation\",\n                    \"Implement systematic accessibility testing in your development workflow\",\n                    \"Consider automated testing tools alongside manual accessibility audits\"\n                ];\n                quickWins = [\n                    {\n                        title: \"Color Contrast Fixes\",\n                        impact: \"High\",\n                        effort: \"Low\",\n                        eta: \"1-2 days\"\n                    },\n                    {\n                        title: \"Focus Indicators\",\n                        impact: \"Critical\",\n                        effort: \"Low\",\n                        eta: \"1 day\"\n                    },\n                    {\n                        title: \"Alt Text Addition\",\n                        impact: \"High\",\n                        effort: \"Medium\",\n                        eta: \"2-3 days\"\n                    }\n                ];\n            }\n        }\n        // Build categories (prefer POUR mapping)\n        const categories = (()=>{\n            const map = new Map();\n            issues.forEach((iss, idx)=>{\n                const key = iss.category || iss.type;\n                const entry = map.get(key) || {\n                    name: key,\n                    impact: iss.impact,\n                    indices: []\n                };\n                entry.indices.push(idx);\n                const order = {\n                    critical: 3,\n                    high: 2,\n                    medium: 1,\n                    low: 0\n                };\n                if (order[iss.impact] > order[entry.impact]) entry.impact = iss.impact;\n                map.set(key, entry);\n            });\n            return Array.from(map.values()).map((v)=>({\n                    name: v.name,\n                    impact: v.impact,\n                    count: v.indices.length,\n                    indices: v.indices\n                }));\n        })();\n        // Counts and score\n        const totalIssues = issues.length;\n        const criticalIssues = issues.filter((i)=>i.impact === \"critical\").length;\n        const highImpactIssues = issues.filter((i)=>i.impact === \"high\").length;\n        const mediumImpactIssues = issues.filter((i)=>i.impact === \"medium\").length;\n        const lowImpactIssues = issues.filter((i)=>i.impact === \"low\").length;\n        const adjustedScore = Math.max(0, Math.min(100, overallScore - (criticalIssues * 20 + highImpactIssues * 10 + mediumImpactIssues * 5 + lowImpactIssues * 2)));\n        const potential = potentialScore ?? Math.max(adjustedScore, Math.min(100, adjustedScore + 20));\n        const supabase = (0,_lib_supabase_server__WEBPACK_IMPORTED_MODULE_3__.getSupabaseServer)();\n        const { data: insert, error } = await supabase.from(\"assessments\").insert({\n            website_url: analysisTarget,\n            email: email || null,\n            company_name: companyName || null,\n            assessment_results: {\n                issues,\n                assessmentType,\n                pourScores,\n                quickWins,\n                gradeRating,\n                businessImpact,\n                issueCategories: categories,\n                humanSummary\n            },\n            overall_score: adjustedScore,\n            total_issues: totalIssues,\n            critical_issues: criticalIssues,\n            high_impact_issues: highImpactIssues,\n            medium_impact_issues: mediumImpactIssues,\n            low_impact_issues: lowImpactIssues,\n            screenshot_url: screenshotUrl\n        }).select(\"id, created_at\").single();\n        if (error) throw error;\n        const defaultRecs = [\n            \"Prioritize critical and high-impact issues for immediate remediation\",\n            \"Implement systematic accessibility testing in your development workflow\",\n            \"Consider automated testing tools alongside manual accessibility audits\",\n            \"Train development team on WCAG 2.2 AA compliance requirements\",\n            \"Establish accessibility quality assurance checkpoints\",\n            \"Plan for ongoing accessibility monitoring and maintenance\"\n        ];\n        const assessmentResult = {\n            id: insert.id,\n            websiteUrl: analysisTarget,\n            overallScore: adjustedScore,\n            totalIssues,\n            criticalIssues,\n            highImpactIssues,\n            mediumImpactIssues,\n            lowImpactIssues,\n            issues,\n            recommendations: recommendations.length ? recommendations : defaultRecs,\n            estimatedImpact: `${Math.round((100 - adjustedScore) / 100 * 20)}% of users may encounter accessibility barriers`,\n            createdAt: insert.created_at,\n            aiDetailedResponse: humanSummary,\n            gradeRating,\n            pourScores,\n            quickWins,\n            screenshotUrl,\n            potentialScore: potential,\n            issueCategories: categories,\n            businessImpact\n        };\n        const response = {\n            success: true,\n            data: assessmentResult,\n            message: \"Comprehensive accessibility assessment completed\"\n        };\n        return new Response(JSON.stringify(response), {\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        });\n    } catch (err) {\n        console.error(\"Assessment error:\", err);\n        const response = {\n            success: false,\n            message: \"Failed to complete accessibility assessment\"\n        };\n        return new Response(JSON.stringify(response), {\n            status: 500,\n            headers: {\n                \"content-type\": \"application/json\"\n            }\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/assess/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/crawler.ts":
/*!****************************!*\
  !*** ./src/lib/crawler.ts ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessibilityCrawler: () => (/* binding */ AccessibilityCrawler),\n/* harmony export */   crawlPage: () => (/* binding */ crawlPage)\n/* harmony export */ });\n/* harmony import */ var puppeteer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! puppeteer */ \"puppeteer\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([puppeteer__WEBPACK_IMPORTED_MODULE_0__]);\npuppeteer__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass AccessibilityCrawler {\n    async initialize() {\n        this.browser = await puppeteer__WEBPACK_IMPORTED_MODULE_0__[\"default\"].launch({\n            headless: true,\n            args: [\n                \"--no-sandbox\",\n                \"--disable-setuid-sandbox\",\n                \"--disable-dev-shm-usage\",\n                \"--disable-accelerated-2d-canvas\",\n                \"--no-first-run\",\n                \"--no-zygote\",\n                \"--single-process\",\n                \"--disable-gpu\"\n            ]\n        });\n    }\n    async cleanup() {\n        if (this.browser) {\n            await this.browser.close();\n            this.browser = null;\n        }\n    }\n    async extractPageData(url) {\n        if (!this.browser) {\n            await this.initialize();\n        }\n        const page = await this.browser.newPage();\n        const startTime = Date.now();\n        try {\n            // Set viewport and user agent\n            await page.setViewport({\n                width: 1920,\n                height: 1080\n            });\n            await page.setUserAgent(\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36\");\n            // Navigate to page\n            const response = await page.goto(url, {\n                waitUntil: \"networkidle0\",\n                timeout: 30000\n            });\n            if (!response || !response.ok()) {\n                throw new Error(`Failed to load page: ${response?.status()}`);\n            }\n            const pageLoadTime = Date.now() - startTime;\n            // Extract all data in parallel\n            const [htmlSource, pageMetadata, images, forms, headings, links, colors, interactiveElements, landmarks, accessibilityTree, additionalData] = await Promise.all([\n                this.extractHtmlSource(page),\n                this.extractPageMetadata(page),\n                this.extractImages(page),\n                this.extractForms(page),\n                this.extractHeadings(page),\n                this.extractLinks(page),\n                this.extractColors(page),\n                this.extractInteractiveElements(page),\n                this.extractLandmarks(page),\n                this.extractAccessibilityTree(page),\n                this.extractAdditionalData(page)\n            ]);\n            const extractionTime = Date.now() - startTime;\n            return {\n                url,\n                htmlSource,\n                pageMetadata,\n                images,\n                forms,\n                headings,\n                links,\n                colors,\n                interactiveElements,\n                landmarks,\n                accessibilityTree,\n                ...additionalData,\n                extractionMetadata: {\n                    timestamp: new Date().toISOString(),\n                    extractionTime,\n                    pageLoadTime,\n                    errors: [],\n                    warnings: []\n                }\n            };\n        } catch (error) {\n            throw new Error(`Crawling failed: ${error}`);\n        } finally{\n            await page.close();\n        }\n    }\n    async extractHtmlSource(page) {\n        return await page.content();\n    }\n    async extractPageMetadata(page) {\n        return await page.evaluate(()=>{\n            return {\n                title: document.title,\n                lang: document.documentElement.lang || undefined,\n                viewport: document.querySelector('meta[name=\"viewport\"]')?.getAttribute(\"content\") || undefined,\n                description: document.querySelector('meta[name=\"description\"]')?.getAttribute(\"content\") || undefined,\n                charset: document.characterSet || undefined\n            };\n        });\n    }\n    async extractImages(page) {\n        return await page.evaluate(()=>{\n            const images = [];\n            // Regular img elements\n            const imgElements = document.querySelectorAll(\"img\");\n            imgElements.forEach((img, index)=>{\n                const rect = img.getBoundingClientRect();\n                const alt = img.getAttribute(\"alt\");\n                images.push({\n                    src: img.src,\n                    alt: alt || undefined,\n                    selector: `img:nth-of-type(${index + 1})`,\n                    dimensions: {\n                        width: rect.width,\n                        height: rect.height\n                    },\n                    isDecorative: alt === \"\",\n                    hasEmptyAlt: alt === \"\",\n                    isBackgroundImage: false,\n                    context: img.closest(\"figure\")?.textContent?.trim() || img.parentElement?.textContent?.trim()?.substring(0, 100)\n                });\n            });\n            // Background images\n            const elementsWithBgImages = document.querySelectorAll(\"*\");\n            elementsWithBgImages.forEach((el, index)=>{\n                const styles = window.getComputedStyle(el);\n                const bgImage = styles.backgroundImage;\n                if (bgImage && bgImage !== \"none\" && bgImage.includes(\"url(\")) {\n                    const urlMatch = bgImage.match(/url\\([\"']?([^\"')]+)[\"']?\\)/);\n                    if (urlMatch) {\n                        const rect = el.getBoundingClientRect();\n                        images.push({\n                            src: urlMatch[1],\n                            alt: el.getAttribute(\"aria-label\") || undefined,\n                            selector: `${el.tagName.toLowerCase()}:nth-of-type(${index + 1})`,\n                            dimensions: {\n                                width: rect.width,\n                                height: rect.height\n                            },\n                            isDecorative: !el.getAttribute(\"aria-label\"),\n                            hasEmptyAlt: false,\n                            isBackgroundImage: true,\n                            context: el.textContent?.trim()?.substring(0, 100)\n                        });\n                    }\n                }\n            });\n            return images;\n        });\n    }\n    async extractForms(page) {\n        return await page.evaluate(()=>{\n            const forms = Array.from(document.querySelectorAll(\"form\"));\n            const allInputs = Array.from(document.querySelectorAll(\"input, select, textarea\"));\n            const unlabeledInputs = [];\n            const missingFieldsets = [];\n            const missingRequired = [];\n            allInputs.forEach((input, index)=>{\n                const rect = input.getBoundingClientRect();\n                const elementInfo = {\n                    selector: `${input.tagName.toLowerCase()}:nth-of-type(${index + 1})`,\n                    tagName: input.tagName,\n                    text: input.textContent?.trim(),\n                    attributes: Object.fromEntries(Array.from(input.attributes).map((attr)=>[\n                            attr.name,\n                            attr.value\n                        ])),\n                    boundingBox: {\n                        x: rect.x,\n                        y: rect.y,\n                        width: rect.width,\n                        height: rect.height\n                    }\n                };\n                // Check for labels\n                const id = input.getAttribute(\"id\");\n                const hasLabel = id ? document.querySelector(`label[for=\"${id}\"]`) : null;\n                const hasAriaLabel = input.getAttribute(\"aria-label\") || input.getAttribute(\"aria-labelledby\");\n                if (!hasLabel && !hasAriaLabel) {\n                    unlabeledInputs.push(elementInfo);\n                }\n                // Check for required fields\n                if (input.hasAttribute(\"required\") && !input.getAttribute(\"aria-required\")) {\n                    missingRequired.push(elementInfo);\n                }\n            });\n            // Check for radio/checkbox groups without fieldsets\n            const radioGroups = new Map();\n            document.querySelectorAll('input[type=\"radio\"]').forEach((radio)=>{\n                const name = radio.getAttribute(\"name\");\n                if (name) {\n                    if (!radioGroups.has(name)) radioGroups.set(name, []);\n                    radioGroups.get(name).push(radio);\n                }\n            });\n            radioGroups.forEach((radios, name)=>{\n                if (radios.length > 1) {\n                    const hasFieldset = radios.some((radio)=>radio.closest(\"fieldset\"));\n                    if (!hasFieldset) {\n                        radios.forEach((radio, index)=>{\n                            const rect = radio.getBoundingClientRect();\n                            missingFieldsets.push({\n                                selector: `input[name=\"${name}\"]:nth-of-type(${index + 1})`,\n                                tagName: radio.tagName,\n                                text: radio.textContent?.trim(),\n                                attributes: Object.fromEntries(Array.from(radio.attributes).map((attr)=>[\n                                        attr.name,\n                                        attr.value\n                                    ])),\n                                boundingBox: {\n                                    x: rect.x,\n                                    y: rect.y,\n                                    width: rect.width,\n                                    height: rect.height\n                                }\n                            });\n                        });\n                    }\n                }\n            });\n            return {\n                unlabeledInputs,\n                missingFieldsets,\n                noErrorAssociation: [],\n                missingRequired,\n                poorInstructions: [],\n                inaccessibleValidation: [],\n                forms: forms.map((form, index)=>({\n                        selector: `form:nth-of-type(${index + 1})`,\n                        inputs: Array.from(form.querySelectorAll(\"input, select, textarea\")).map((input, inputIndex)=>{\n                            const rect = input.getBoundingClientRect();\n                            return {\n                                selector: `${input.tagName.toLowerCase()}:nth-of-type(${inputIndex + 1})`,\n                                tagName: input.tagName,\n                                text: input.textContent?.trim(),\n                                attributes: Object.fromEntries(Array.from(input.attributes).map((attr)=>[\n                                        attr.name,\n                                        attr.value\n                                    ])),\n                                boundingBox: {\n                                    x: rect.x,\n                                    y: rect.y,\n                                    width: rect.width,\n                                    height: rect.height\n                                }\n                            };\n                        }),\n                        hasSubmit: !!form.querySelector('input[type=\"submit\"], button[type=\"submit\"], button:not([type])'),\n                        hasValidation: !!form.querySelector(\"[required], [pattern], [min], [max]\")\n                    }))\n            };\n        });\n    }\n    async extractHeadings(page) {\n        return await page.evaluate(()=>{\n            const headings = Array.from(document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\"));\n            return headings.map((heading, index)=>{\n                const rect = heading.getBoundingClientRect();\n                const level = parseInt(heading.tagName.charAt(1));\n                const text = heading.textContent?.trim() || \"\";\n                return {\n                    selector: `${heading.tagName.toLowerCase()}:nth-of-type(${index + 1})`,\n                    tagName: heading.tagName,\n                    text,\n                    attributes: Object.fromEntries(Array.from(heading.attributes).map((attr)=>[\n                            attr.name,\n                            attr.value\n                        ])),\n                    boundingBox: {\n                        x: rect.x,\n                        y: rect.y,\n                        width: rect.width,\n                        height: rect.height\n                    },\n                    level,\n                    isEmpty: text.length === 0,\n                    hasProperNesting: true // TODO: Calculate proper nesting\n                };\n            });\n        });\n    }\n    async extractLinks(page) {\n        return await page.evaluate(()=>{\n            const links = Array.from(document.querySelectorAll(\"a[href]\"));\n            const genericTexts = [\n                \"click here\",\n                \"read more\",\n                \"more\",\n                \"link\",\n                \"here\",\n                \"more info\"\n            ];\n            return links.map((link, index)=>{\n                const rect = link.getBoundingClientRect();\n                const text = link.textContent?.trim() || \"\";\n                const href = link.getAttribute(\"href\") || \"\";\n                return {\n                    selector: `a:nth-of-type(${index + 1})`,\n                    tagName: link.tagName,\n                    text,\n                    attributes: Object.fromEntries(Array.from(link.attributes).map((attr)=>[\n                            attr.name,\n                            attr.value\n                        ])),\n                    boundingBox: {\n                        x: rect.x,\n                        y: rect.y,\n                        width: rect.width,\n                        height: rect.height\n                    },\n                    href,\n                    hasGenericText: genericTexts.some((generic)=>text.toLowerCase().includes(generic)),\n                    isEmptyLink: text.length === 0,\n                    hasTitle: !!link.getAttribute(\"title\"),\n                    opensInNewWindow: link.getAttribute(\"target\") === \"_blank\"\n                };\n            });\n        });\n    }\n    async extractColors(page) {\n        return await page.evaluate(()=>{\n            const textElements = document.querySelectorAll(\"p, span, div, h1, h2, h3, h4, h5, h6, a, button, label\");\n            const colors = [];\n            textElements.forEach((element, index)=>{\n                const text = element.textContent?.trim();\n                if (!text || text.length === 0) return;\n                const styles = window.getComputedStyle(element);\n                const color = styles.color;\n                const backgroundColor = styles.backgroundColor;\n                const fontSize = parseFloat(styles.fontSize);\n                // Simple contrast calculation (approximation)\n                const getColorValues = (colorStr)=>{\n                    const canvas = document.createElement(\"canvas\");\n                    const ctx = canvas.getContext(\"2d\");\n                    ctx.fillStyle = colorStr;\n                    return ctx.fillStyle;\n                };\n                const fg = getColorValues(color);\n                const bg = getColorValues(backgroundColor);\n                // Simplified contrast calculation - in real implementation, use proper algorithm\n                const contrast = 4.5; // Placeholder - implement proper contrast calculation\n                colors.push({\n                    foreground: fg,\n                    background: bg,\n                    selector: `${element.tagName.toLowerCase()}:nth-of-type(${index + 1})`,\n                    contrast,\n                    meetsAA: contrast >= 4.5,\n                    meetsAAA: contrast >= 7,\n                    fontSize,\n                    isLargeText: fontSize >= 18 || fontSize >= 14 && styles.fontWeight === \"bold\",\n                    context: text.substring(0, 50)\n                });\n            });\n            return colors;\n        });\n    }\n    async extractInteractiveElements(page) {\n        return await page.evaluate(()=>{\n            const interactiveSelectors = 'button, a[href], input, select, textarea, [tabindex], [onclick], [role=\"button\"], [role=\"link\"]';\n            const elements = Array.from(document.querySelectorAll(interactiveSelectors));\n            return elements.map((element, index)=>{\n                const rect = element.getBoundingClientRect();\n                const tabIndex = element.getAttribute(\"tabindex\");\n                return {\n                    selector: `${element.tagName.toLowerCase()}:nth-of-type(${index + 1})`,\n                    tagName: element.tagName,\n                    text: element.textContent?.trim(),\n                    attributes: Object.fromEntries(Array.from(element.attributes).map((attr)=>[\n                            attr.name,\n                            attr.value\n                        ])),\n                    boundingBox: {\n                        x: rect.x,\n                        y: rect.y,\n                        width: rect.width,\n                        height: rect.height\n                    },\n                    isFocusable: tabIndex !== \"-1\",\n                    hasVisibleFocus: true,\n                    tabIndex: tabIndex ? parseInt(tabIndex) : undefined,\n                    role: element.getAttribute(\"role\") || undefined,\n                    ariaLabel: element.getAttribute(\"aria-label\") || undefined,\n                    ariaDescribedBy: element.getAttribute(\"aria-describedby\") || undefined,\n                    touchTargetSize: {\n                        width: rect.width,\n                        height: rect.height\n                    },\n                    meetsTouchTargetSize: rect.width >= 44 && rect.height >= 44\n                };\n            });\n        });\n    }\n    async extractLandmarks(page) {\n        return await page.evaluate(()=>{\n            const landmarkSelectors = 'header, nav, main, aside, footer, [role=\"banner\"], [role=\"navigation\"], [role=\"main\"], [role=\"complementary\"], [role=\"contentinfo\"]';\n            const elements = Array.from(document.querySelectorAll(landmarkSelectors));\n            return elements.map((element, index)=>{\n                const rect = element.getBoundingClientRect();\n                const role = element.getAttribute(\"role\") || element.tagName.toLowerCase();\n                let landmarkType = \"region\";\n                if (role === \"banner\" || element.tagName === \"HEADER\") landmarkType = \"banner\";\n                else if (role === \"navigation\" || element.tagName === \"NAV\") landmarkType = \"navigation\";\n                else if (role === \"main\" || element.tagName === \"MAIN\") landmarkType = \"main\";\n                else if (role === \"complementary\" || element.tagName === \"ASIDE\") landmarkType = \"complementary\";\n                else if (role === \"contentinfo\" || element.tagName === \"FOOTER\") landmarkType = \"contentinfo\";\n                return {\n                    selector: `${element.tagName.toLowerCase()}:nth-of-type(${index + 1})`,\n                    tagName: element.tagName,\n                    text: element.textContent?.trim(),\n                    attributes: Object.fromEntries(Array.from(element.attributes).map((attr)=>[\n                            attr.name,\n                            attr.value\n                        ])),\n                    boundingBox: {\n                        x: rect.x,\n                        y: rect.y,\n                        width: rect.width,\n                        height: rect.height\n                    },\n                    landmarkType,\n                    hasLabel: !!(element.getAttribute(\"aria-label\") || element.getAttribute(\"aria-labelledby\")),\n                    isUnique: true // TODO: Check for uniqueness\n                };\n            });\n        });\n    }\n    async extractAccessibilityTree(page) {\n        // This is a simplified version - full implementation would use Chrome DevTools Protocol\n        return await page.evaluate(()=>{\n            const getAccessibilityInfo = (element)=>{\n                return {\n                    name: element.getAttribute(\"aria-label\") || element.textContent?.trim() || undefined,\n                    role: element.getAttribute(\"role\") || undefined,\n                    selector: element.tagName.toLowerCase(),\n                    properties: {\n                        tagName: element.tagName,\n                        id: element.id || undefined,\n                        className: element.className || undefined\n                    }\n                };\n            };\n            const importantElements = document.querySelectorAll(\"h1, h2, h3, h4, h5, h6, button, a, input, select, textarea, [role]\");\n            return Array.from(importantElements).map(getAccessibilityInfo);\n        });\n    }\n    async extractAdditionalData(page) {\n        return await page.evaluate(()=>{\n            const skipLinks = document.querySelectorAll('a[href^=\"#\"]');\n            const h1Elements = document.querySelectorAll(\"h1\");\n            const headings = document.querySelectorAll(\"h1, h2, h3, h4, h5, h6\");\n            const landmarks = document.querySelectorAll('header, nav, main, aside, footer, [role=\"banner\"], [role=\"navigation\"], [role=\"main\"], [role=\"complementary\"], [role=\"contentinfo\"]');\n            return {\n                hasSkipLinks: skipLinks.length > 0,\n                languageAttributes: Array.from(document.querySelectorAll(\"[lang]\")).map((el, index)=>({\n                        selector: `${el.tagName.toLowerCase()}:nth-of-type(${index + 1})`,\n                        lang: el.getAttribute(\"lang\") || \"\"\n                    })),\n                mediaElements: Array.from(document.querySelectorAll(\"video, audio\")).map((el, index)=>({\n                        selector: `${el.tagName.toLowerCase()}:nth-of-type(${index + 1})`,\n                        type: el.tagName.toLowerCase(),\n                        hasControls: el.hasAttribute(\"controls\"),\n                        hasTranscript: false,\n                        hasCaptions: false,\n                        autoPlays: el.hasAttribute(\"autoplay\")\n                    })),\n                documentStructure: {\n                    hasH1: h1Elements.length > 0,\n                    h1Count: h1Elements.length,\n                    headingHierarchy: Array.from(headings).map((h)=>parseInt(h.tagName.charAt(1))),\n                    landmarkCount: landmarks.length,\n                    skipLinkCount: skipLinks.length\n                }\n            };\n        });\n    }\n    constructor(){\n        this.browser = null;\n    }\n}\n// Utility function for single-use crawling\nasync function crawlPage(url) {\n    const crawler = new AccessibilityCrawler();\n    try {\n        return await crawler.extractPageData(url);\n    } finally{\n        await crawler.cleanup();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/crawler.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/prompt.ts":
/*!***************************!*\
  !*** ./src/lib/prompt.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   captureWebsiteScreenshot: () => (/* binding */ captureWebsiteScreenshot),\n/* harmony export */   getSystemPrompt: () => (/* binding */ getSystemPrompt)\n/* harmony export */ });\nconst getSystemPrompt = (assessmentType)=>{\n    const basePrompt = `You are ChatGPT operating as \"Accessibility Impact Estimator\" for AccessiScan — an online tool that provides comprehensive accessibility analysis for websites and apps.\n\nMission:\n1) Conduct COMPREHENSIVE accessibility scanning (not just screening). 2) Find 15-25+ specific, actionable issues with exact evidence. 3) Provide detailed, developer-ready recommendations.\n\nCRITICAL REQUIREMENTS:\n- MINIMUM 15 issues required across all POUR categories\n- EVERY issue must include specific selectors, file names, or element details\n- NO generic descriptions - be specific about what's broken and where\n- Include exact contrast ratios, specific image file names, precise element selectors\n- Cover ALL major accessibility categories comprehensively\n\nScope & Principles:\n- Use WCAG 2.2 AA as default standard. Organize findings under POUR (Perceivable, Operable, Understandable, Robust).\n- This is a COMPREHENSIVE audit, not a basic screening. Find everything you can.\n- Analyze all provided structured data thoroughly - images, forms, headings, links, colors, interactive elements.\n- Be specific and actionable in all findings.\n\nMANDATORY COMPREHENSIVE CHECKS:\n\nPERCEIVABLE (minimum 5 issues):\n- Every image: check alt text, file names, decorative vs informative\n- All text/background color combinations: calculate exact contrast ratios\n- Heading hierarchy: check complete h1-h6 structure for gaps\n- Media elements: captions, transcripts, audio descriptions\n- Images of text: identify and flag all instances\n- Language attributes: missing or incorrect lang declarations\n\nOPERABLE (minimum 4 issues):\n- ALL interactive elements: keyboard accessibility, focus indicators\n- Touch targets: measure actual sizes, flag anything under 44px\n- Skip links: presence and functionality\n- Focus traps: modals, dropdowns, complex widgets\n- Auto-playing content: videos, carousels, animations\n- Timing: session timeouts, auto-refresh\n\nUNDERSTANDABLE (minimum 3 issues):\n- Form labels: every input must have proper association\n- Error messages: clear, accessible, properly associated\n- Instructions: complex forms need clear guidance\n- Link text: identify \"click here\", \"read more\", generic text\n- Consistent navigation: check for inconsistencies\n- Input purpose: autocomplete attributes for user data\n\nROBUST (minimum 3 issues):\n- ARIA usage: validate all roles, properties, states\n- Semantic markup: proper use of headings, lists, landmarks\n- Custom controls: ensure proper accessibility implementation\n- Browser/AT compatibility issues\n- HTML validation: major structural problems\n\nScoring & Prioritization:\n- Severity (1–5): 1=minor annoyance → 5=completely blocks access\n- Reach (1–5): 1=affects few users → 5=affects most users\n- Frequency (1–5): 1=rare occurrence → 5=happens constantly\n- ImpactScore = Severity × Reach × Frequency (1–125)\n- Effort (1–5): 1=quick CSS fix → 5=major architectural change\n- PriorityScore = ImpactScore ÷ Effort\n- Confidence (0.0–1.0): based on available evidence\n\nEVIDENCE REQUIREMENTS:\n- Exact selectors: \"img[src='hero-banner.jpg']\", \"#contact-form input[type='email']\"\n- Specific file names: \"logo.png missing alt text\", \"banner-image.jpg\"\n- Precise measurements: \"contrast ratio 2.1:1 (needs 4.5:1)\"\n- Instance counts: \"Found in 8 images\", \"Affects 12 form fields\"\n- Code snippets: actual HTML showing the problem\n\nOutput Format (ALWAYS produce both, in this order):\n1) MACHINE_OUTPUT JSON (strict) — no markdown, no code fences, no prose. JSON only.\n2) A single line with exactly: --- HUMAN_SUMMARY ---\n3) HUMAN_SUMMARY (concise, <~250 words, plain English)\n\nMACHINE_OUTPUT JSON Schema:\n{\n  \"audit_id\": \"<timestamp>\",\n  \"target_summary\": { \"type\": \"web\", \"pages_or_components\": [\"homepage\"], \"assumptions\": [\"based on provided structured data\"] },\n  \"overall\": {\n    \"grade\": \"A+|A|A-|B+|B|B-|C+|C|C-|D|F\",\n    \"score_0_to_100\": 0,\n    \"confidence_0_to_1\": 0.0,\n    \"pour_scores\": { \"perceivable\": 0, \"operable\": 0, \"understandable\": 0, \"robust\": 0 }\n  },\n  \"top_findings\": [\n    {\n      \"id\": \"ISSUE-1\",\n      \"title\": \"Specific Issue Name with Context\",\n      \"wcag_refs\": [\"1.4.3\",\"2.4.7\"],\n      \"pour\": \"Perceivable|Operable|Understandable|Robust\",\n      \"severity_1_to_5\": 4,\n      \"reach_1_to_5\": 5,\n      \"frequency_1_to_5\": 5,\n      \"impact_score\": 100,\n      \"effort_1_to_5\": 2,\n      \"priority_score\": 50,\n      \"confidence_0_to_1\": 0.9,\n      \"affected_user_groups\": [\"screen reader users\",\"keyboard-only users\"],\n      \"business_impact\": \"Users cannot complete checkout process\",\n      \"evidence\": {\n        \"selectors\": [\"img[src='hero-banner.jpg']\", \"#checkout-form input[type='email']\"],\n        \"snippets\": [\"<img src='hero-banner.jpg'>\", \"<input type='email' placeholder='Email'>\"],\n        \"colors\": [{\"fg\":\"#666666\",\"bg\":\"#FFFFFF\",\"contrast\":2.1}],\n        \"locations\": [\"Homepage hero section\", \"Checkout form step 2\"],\n        \"instance_count\": 8,\n        \"specific_files\": [\"hero-banner.jpg\", \"product-image-1.png\"]\n      },\n      \"recommended_fix\": [\"Add alt='Company logo and tagline' to hero image\", \"Associate email input with proper label element\"],\n      \"developer_notes\": \"Use <label for='email'>Email Address</label> and <input id='email' type='email'>\",\n      \"test_steps\": [\"Navigate with screen reader\", \"Check image announces properly\", \"Verify form field is announced\"]\n    }\n  ],\n  \"summary_stats\": { \"issue_count\": 18, \"high_priority_count\": 6, \"est_time_to_relief\": \"2-3 days for critical fixes\", \"estimated_users_impacted_percent\": 25 },\n  \"quick_wins\": [{ \"id\": \"ISSUE-2\", \"why_now\": \"High impact, 15-minute fix\", \"eta\": \"30 minutes\" }],\n  \"visualization_spec\": { \"heatmap_hint\": \"Highlight problem areas\", \"charts\": [\"issues by severity\", \"POUR distribution\"] },\n  \"cta\": { \"next_steps\": [\"Fix critical issues first\", \"Implement systematic testing\", \"Get comprehensive audit\"], \"lead_capture_copy\": \"Get detailed remediation plan\", \"lead_capture_fields\": [\"name\",\"email\",\"company\",\"website\"] },\n  \"disclaimers\": [\"Comprehensive analysis based on provided data\", \"Manual testing recommended for full compliance\"]\n}\n\nQUALITY REQUIREMENTS:\n- Minimum 15 issues in top_findings array\n- Each issue must have specific evidence with real selectors/files\n- No generic descriptions like \"images need alt text\" - be specific: \"hero-banner.jpg missing alt text\"\n- Include instance counts: \"affects 8 images\", \"found in 12 form fields\"\n- Provide exact measurements: contrast ratios, pixel dimensions, element counts\n`;\n    const imageSpecificPrompt = `Additional focus for screenshots: contrast ratios, visual hierarchy, focus indicators, target sizes (>=44px), readability, labels. Prefer conservative confidence for anything requiring DOM inspection.`;\n    const urlSpecificPrompt = `Additional focus for URLs: semantic HTML, headings/landmarks, keyboard operability, forms/labels, ARIA usage, media alternatives, color contrast. Provide realistic selectors and instance estimates.`;\n    return basePrompt + \"\\n\" + (assessmentType === \"image\" ? imageSpecificPrompt : urlSpecificPrompt);\n};\nconst captureWebsiteScreenshot = async (url)=>{\n    try {\n        return `https://image.thum.io/get/width/800/crop/600/allowJPG/wait/20/noanimate/${encodeURIComponent(url)}`;\n    } catch (error) {\n        console.error(\"Screenshot capture failed:\", error);\n        return undefined;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/prompt.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/supabase-server.ts":
/*!************************************!*\
  !*** ./src/lib/supabase-server.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSupabaseServer: () => (/* binding */ getSupabaseServer)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(rsc)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n\nconst supabaseUrl = \"https://nupfntmccpxrfnaaetmg.supabase.co\";\nconst serviceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\nif (!supabaseUrl || !serviceKey) {\n    // Avoid throwing during import on client; API routes run on server\n    console.warn(\"Supabase env vars not set. Set NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY\");\n}\nfunction getSupabaseServer() {\n    if (!supabaseUrl || !serviceKey) {\n        throw new Error(\"Supabase environment variables are missing\");\n    }\n    return (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, serviceKey, {\n        auth: {\n            persistSession: false,\n            autoRefreshToken: false\n        },\n        global: {\n            headers: {\n                \"X-Client-Info\": \"accessiscan-next-server\"\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL3N1cGFiYXNlLXNlcnZlci50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUVyRCxNQUFNQyxjQUFjQywwQ0FBb0M7QUFDeEQsTUFBTUcsYUFBYUgsUUFBUUMsR0FBRyxDQUFDRyx5QkFBeUI7QUFFeEQsSUFBSSxDQUFDTCxlQUFlLENBQUNJLFlBQVk7SUFDL0IsbUVBQW1FO0lBQ25FRSxRQUFRQyxJQUFJLENBQUM7QUFDZjtBQUVPLFNBQVNDO0lBQ2QsSUFBSSxDQUFDUixlQUFlLENBQUNJLFlBQVk7UUFDL0IsTUFBTSxJQUFJSyxNQUFNO0lBQ2xCO0lBQ0EsT0FBT1YsbUVBQVlBLENBQUNDLGFBQWFJLFlBQVk7UUFDM0NNLE1BQU07WUFBRUMsZ0JBQWdCO1lBQU9DLGtCQUFrQjtRQUFNO1FBQ3ZEQyxRQUFRO1lBQUVDLFNBQVM7Z0JBQUUsaUJBQWlCO1lBQTBCO1FBQUU7SUFDcEU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2FjY2Vzc2lzY2FuLy4vc3JjL2xpYi9zdXBhYmFzZS1zZXJ2ZXIudHM/OGNmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xuXG5jb25zdCBzdXBhYmFzZVVybCA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCE7XG5jb25zdCBzZXJ2aWNlS2V5ID0gcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWSE7XG5cbmlmICghc3VwYWJhc2VVcmwgfHwgIXNlcnZpY2VLZXkpIHtcbiAgLy8gQXZvaWQgdGhyb3dpbmcgZHVyaW5nIGltcG9ydCBvbiBjbGllbnQ7IEFQSSByb3V0ZXMgcnVuIG9uIHNlcnZlclxuICBjb25zb2xlLndhcm4oJ1N1cGFiYXNlIGVudiB2YXJzIG5vdCBzZXQuIFNldCBORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwgYW5kIFNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVknKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFN1cGFiYXNlU2VydmVyKCkge1xuICBpZiAoIXN1cGFiYXNlVXJsIHx8ICFzZXJ2aWNlS2V5KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdTdXBhYmFzZSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgYXJlIG1pc3NpbmcnKTtcbiAgfVxuICByZXR1cm4gY3JlYXRlQ2xpZW50KHN1cGFiYXNlVXJsLCBzZXJ2aWNlS2V5LCB7XG4gICAgYXV0aDogeyBwZXJzaXN0U2Vzc2lvbjogZmFsc2UsIGF1dG9SZWZyZXNoVG9rZW46IGZhbHNlIH0sXG4gICAgZ2xvYmFsOiB7IGhlYWRlcnM6IHsgJ1gtQ2xpZW50LUluZm8nOiAnYWNjZXNzaXNjYW4tbmV4dC1zZXJ2ZXInIH0gfSxcbiAgfSk7XG59XG5cblxuIl0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlVXJsIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCIsInNlcnZpY2VLZXkiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwiY29uc29sZSIsIndhcm4iLCJnZXRTdXBhYmFzZVNlcnZlciIsIkVycm9yIiwiYXV0aCIsInBlcnNpc3RTZXNzaW9uIiwiYXV0b1JlZnJlc2hUb2tlbiIsImdsb2JhbCIsImhlYWRlcnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/supabase-server.ts\n");

/***/ }),

/***/ "(rsc)/./src/shared/types.ts":
/*!*****************************!*\
  !*** ./src/shared/types.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessibilityIssueSchema: () => (/* binding */ AccessibilityIssueSchema),\n/* harmony export */   ApiResponseSchema: () => (/* binding */ ApiResponseSchema),\n/* harmony export */   AssessmentRequestSchema: () => (/* binding */ AssessmentRequestSchema),\n/* harmony export */   AssessmentResultSchema: () => (/* binding */ AssessmentResultSchema),\n/* harmony export */   LeadCaptureSchema: () => (/* binding */ LeadCaptureSchema)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/zod/index.js\");\n\n// Assessment request schema\nconst AssessmentRequestSchema = zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n    websiteUrl: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().url(\"Please enter a valid website URL\").optional(),\n    imageFile: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    assessmentType: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"enum\"]([\n        \"url\",\n        \"image\"\n    ]),\n    email: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().email(\"Please enter a valid email address\").optional(),\n    companyName: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().min(1, \"Company name is required\").optional()\n}).refine((data)=>{\n    if (data.assessmentType === \"url\") {\n        return !!data.websiteUrl;\n    }\n    if (data.assessmentType === \"image\") {\n        return !!data.imageFile;\n    }\n    return false;\n}, {\n    message: \"Either website URL or image file is required\"\n});\n// Assessment result schemas\nconst AccessibilityIssueSchema = zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n    type: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n    description: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n    impact: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"enum\"]([\n        \"critical\",\n        \"high\",\n        \"medium\",\n        \"low\"\n    ]),\n    wcagLevel: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n    element: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    recommendation: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n    // Rich optional fields for detailed rendering\n    id: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].union([\n        zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string()\n    ]).optional(),\n    category: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    title: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    userImpact: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    wcagRefs: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string()).optional(),\n    instances: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    selectors: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string()).optional(),\n    evidence: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n        snippets: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string()).optional()\n    }).optional(),\n    codeExample: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n        bad: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n        good: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional()\n    }).optional(),\n    remediationSteps: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string()).optional(),\n    timeEstimate: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    severity: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    reach: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    frequency: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    impactScore: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    effort: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    priorityScore: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    confidence: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    quickFix: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].boolean().optional(),\n    previewHighlights: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n        x: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        y: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        w: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        h: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        note: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional()\n    })).optional()\n});\nconst AssessmentResultSchema = zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n    id: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n    websiteUrl: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n    overallScore: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().min(0).max(100),\n    totalIssues: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n    criticalIssues: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n    highImpactIssues: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n    mediumImpactIssues: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n    lowImpactIssues: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n    issues: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(AccessibilityIssueSchema),\n    recommendations: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string()),\n    estimatedImpact: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n    createdAt: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n    aiDetailedResponse: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    gradeRating: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    pourScores: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n        perceivable: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        operable: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        understandable: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        robust: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number()\n    }).optional(),\n    quickWins: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n        title: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n        impact: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n        effort: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n        eta: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n        steps: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string()).optional()\n    })).optional(),\n    screenshotUrl: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    // Rich optional metadata\n    potentialScore: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n    issueCategories: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n        name: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string(),\n        impact: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"][\"enum\"]([\n            \"critical\",\n            \"high\",\n            \"medium\",\n            \"low\"\n        ]).optional(),\n        count: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number(),\n        indices: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number()).default([])\n    })).optional(),\n    businessImpact: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n        usersAffectedPercent: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].number().optional(),\n        legalRiskNote: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional()\n    }).optional()\n});\n// Lead capture schema\nconst LeadCaptureSchema = zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n    email: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().email(\"Please enter a valid email address\"),\n    companyName: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().min(1, \"Company name is required\"),\n    websiteUrl: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().url(\"Please enter a valid website URL\"),\n    contactPreferences: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].array(zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string()).default([])\n});\n// API Response schemas\nconst ApiResponseSchema = zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].object({\n    success: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].boolean(),\n    message: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].string().optional(),\n    data: zod__WEBPACK_IMPORTED_MODULE_0__[\"default\"].any().optional()\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/shared/types.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@supabase","vendor-chunks/openai","vendor-chunks/zod","vendor-chunks/whatwg-url","vendor-chunks/tr46","vendor-chunks/webidl-conversions"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fassess%2Froute&page=%2Fapi%2Fassess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fassess%2Froute.ts&appDir=%2FUsers%2Fjeberulz%2FDownloads%2FAccessiScan%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fjeberulz%2FDownloads%2FAccessiScan&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();